@page "/main"
@inject HttpClient Http
@inject CustomAuthStateProvider AuthProvider
@inject NavigationManager NavManager
@attribute [Authorize]

<PageTitle>Home</PageTitle>

<div class="d-flex justify-content-center">
    <div class="d-block">
        <div class="m-1 text-center">
            <h1>Register Page</h1>
        </div>
        <div class="m-1 text-center">
            <h1>aaa Page</h1>
        </div>
            <div class="m-1 text-center">
                <button id="denemebutton" @onclick="HandleLogin" class="btn btn-outline-primary">Bas</button>
            </div>
        <div class="m-1 text-center">
            <h1>Register Page</h1>
        </div>
        @if (!string.IsNullOrEmpty(errorMessage))
        {

            <div class="alert alert-danger">@errorMessage @context.User.FindFirst(ClaimTypes.Email)?.Value</div>
            </Authorized>
            </AuthorizeView>
        }
       
    </div>
</div>

@code {
@using System.Security.Claims
@using Microsoft.AspNetCore.Authorization
    private string? errorMessage;

    private async Task HandleLogin()
    {
        try
        {
            var response = await Http.GetAsync("api/auth/exa");
            if (response.IsSuccessStatusCode)
            {
                errorMessage = "Basarili";
            }
            else
            {
                errorMessage = "Giriş başarısız. Lütfen bilgilerinizi kontrol edin.";
            }
        }
        catch (Exception)
        {
            errorMessage = "Giriş sırasında bir hata oluştu.";
        }
    }
}